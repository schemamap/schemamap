name: "Build & Test"

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  tests:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: cachix/install-nix-action@v30
      with:
        extra_nix_config: |
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
          keep-outputs = true

    - uses: cachix/cachix-action@v15
      with:
        name: devenv

    # https://github.com/nix-community/cache-nix-action#usage
    - name: Restore and cache Nix store
      uses: nix-community/cache-nix-action@v5
      with:
        # restore and save a cache using this key
        primary-key: nix-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
        # if there's no cache hit, restore a cache by this prefix
        restore-prefixes-first-match: nix-${{ runner.os }}-
        # collect garbage until Nix store size (in bytes) is at most this number
        # before trying to save a new cache
        gc-max-store-size-linux: 1073741824
        # do purge caches
        purge: true
        # purge all versions of the cache
        purge-prefixes: cache-${{ runner.os }}-
        # created more than this number of seconds ago relative to the start of the `Post Restore` phase
        purge-created: 0
        # except the version with the `primary-key`, if it exists
        purge-primary-key: never

    - name: Install devenv.sh
      run: nix profile install nixpkgs#devenv

    - name: Run pre-commit hooks, verify formats
      run: devenv ci

    - name: Run tests
      run: devenv shell ci-test
